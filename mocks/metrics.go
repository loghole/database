// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/loghole/database/hooks (interfaces: MetricCollector)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockMetricCollector is a mock of MetricCollector interface.
type MockMetricCollector struct {
	ctrl     *gomock.Controller
	recorder *MockMetricCollectorMockRecorder
}

// MockMetricCollectorMockRecorder is the mock recorder for MockMetricCollector.
type MockMetricCollectorMockRecorder struct {
	mock *MockMetricCollector
}

// NewMockMetricCollector creates a new mock instance.
func NewMockMetricCollector(ctrl *gomock.Controller) *MockMetricCollector {
	mock := &MockMetricCollector{ctrl: ctrl}
	mock.recorder = &MockMetricCollectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricCollector) EXPECT() *MockMetricCollectorMockRecorder {
	return m.recorder
}

// QueryDurationObserve mocks base method.
func (m *MockMetricCollector) QueryDurationObserve(arg0, arg1, arg2, arg3 string, arg4 bool, arg5 time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "QueryDurationObserve", arg0, arg1, arg2, arg3, arg4, arg5)
}

// QueryDurationObserve indicates an expected call of QueryDurationObserve.
func (mr *MockMetricCollectorMockRecorder) QueryDurationObserve(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryDurationObserve", reflect.TypeOf((*MockMetricCollector)(nil).QueryDurationObserve), arg0, arg1, arg2, arg3, arg4, arg5)
}

// SerializationFailureInc mocks base method.
func (m *MockMetricCollector) SerializationFailureInc(arg0, arg1, arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SerializationFailureInc", arg0, arg1, arg2)
}

// SerializationFailureInc indicates an expected call of SerializationFailureInc.
func (mr *MockMetricCollectorMockRecorder) SerializationFailureInc(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SerializationFailureInc", reflect.TypeOf((*MockMetricCollector)(nil).SerializationFailureInc), arg0, arg1, arg2)
}
